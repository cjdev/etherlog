 |Robomap - Design Overview
 ============================================================================================================
 |  ####     ####   #####   ####    ##   ##     ##    ####
 |  #   #   #    #  #    # #    #  #  # #  #   #  #   #   #
 |  ####    #    #  #####  #    #  #   #   #   ####   ####
 |  #   #   #    #  #    # #    # #         # #    #  #
 |  #    #   ####   #####   ####  #         # #    #  #
 ============================================================================================================

As a Dave, I need an accurate roadmap, so that I can see where we are and where we are heading.

As a Product owner, I need a quick and easy way to communicate the current state of our projects in relation to the most recent roadmap; easy, so that I can provide visibility to Dave; quick, so that I can focus on planning rather than paperwork.

As an engineer, I need a quick and easy way to compile project burn-down charts, so that I can spend time engineering and estimating rather than paperwork.

As an engineer, I need a way to provide company-wide visibility to our process, so that we maintain transparency.

As a team-member (engineer, product owner), I need a stakeholder-friendly (i.e. friendly to the executive team, other stakeholders, etc) way to account-for and explain the changes to the roadmap on an interation-by-iteration basis (or finer), so that they can understand why the projects are going the way they are.


============================================================================================================

Theory:

  - a roadmap item can only be in one of three states:
       * Not started
       * Started
       * Finished
  - a roadmap item can be estimated multiple times with varying degrees of certainty
       * Anders' estimates (squinting at a grainy picture of the mountain)
       * Rough team-lead estimates (squinting at the mountain itself)
       * Team epic estimates (looking at the mountain)
       * Story estimates (getting ready to climb the mountain)
  - all history must be preserved (every re-estimate, every split/consolidation/elimination, etc)
============================================================================================================

Epic: Basic backlog functionality
   Product owner creates a backlog item (epic/story/whatever)
   Team estimates backlog item
   Team marks item as started
   Team marks item as finished

Epic: Auto project burn-down
   
============================================================================================================

What does this mean for the roadmap?

Why has the roadmap changed?

What can we do to get our release date back?

============================================================================================================






